@echo off
echo =====================================================
echo EJECUTANDO TESTING EXHAUSTIVO: PERFORMANCE ADVISOR WARNINGS
echo =====================================================
echo.
echo Verificando correcci√≥n de 74 warnings de performance:
echo - Auth RLS Initialization Plan: 19 warnings
echo - Multiple Permissive Policies: 52 warnings  
echo - Duplicate Index: 3 warnings
echo.
echo =====================================================

REM Verificar si Node.js est√° instalado
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå ERROR: Node.js no est√° instalado o no est√° en el PATH
    echo Por favor instala Node.js desde https://nodejs.org/
    pause
    exit /b 1
)

REM Verificar si npm est√° disponible
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå ERROR: npm no est√° disponible
    pause
    exit /b 1
)

echo ‚úÖ Node.js y npm est√°n disponibles
echo.

REM Verificar si las variables de entorno est√°n configuradas
if "%NEXT_PUBLIC_SUPABASE_URL%"=="" (
    echo ‚ö†Ô∏è  ADVERTENCIA: NEXT_PUBLIC_SUPABASE_URL no est√° configurada
    echo Configurando variable temporal para testing...
    set NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
)

if "%SUPABASE_SERVICE_ROLE_KEY%"=="" (
    echo ‚ö†Ô∏è  ADVERTENCIA: SUPABASE_SERVICE_ROLE_KEY no est√° configurada
    echo Configurando variable temporal para testing...
    set SUPABASE_SERVICE_ROLE_KEY=your-service-key
)

echo.
echo üîß Variables de entorno configuradas:
echo SUPABASE_URL: %NEXT_PUBLIC_SUPABASE_URL%
echo SERVICE_KEY: [OCULTA POR SEGURIDAD]
echo.

REM Verificar si @supabase/supabase-js est√° instalado
if not exist "node_modules\@supabase\supabase-js" (
    echo üì¶ Instalando dependencias de Supabase...
    npm install @supabase/supabase-js
    if %errorlevel% neq 0 (
        echo ‚ùå ERROR: No se pudo instalar @supabase/supabase-js
        pause
        exit /b 1
    )
    echo ‚úÖ Dependencias instaladas correctamente
    echo.
)

echo üöÄ Iniciando testing exhaustivo de Performance Advisor Warnings...
echo.

REM Ejecutar el script de testing
node TESTING-EXHAUSTIVO-PERFORMANCE-ADVISOR-WARNINGS-COMPLETO.js

REM Verificar el resultado
if %errorlevel% equ 0 (
    echo.
    echo ‚úÖ ¬°TESTING COMPLETADO EXITOSAMENTE!
    echo.
    echo üìã PR√ìXIMOS PASOS:
    echo 1. Ve a Supabase Dashboard ^> Database ^> Database Linter
    echo 2. Ejecuta el Performance Advisor nuevamente
    echo 3. Verifica que los 74 warnings desaparecieron
    echo 4. Monitorea el rendimiento en producci√≥n
    echo.
    echo üéâ Las optimizaciones de performance se aplicaron correctamente
) else (
    echo.
    echo ‚ùå TESTING FALL√ì - Revisa los errores anteriores
    echo.
    echo üí° POSIBLES SOLUCIONES:
    echo 1. Verifica que las variables de entorno est√©n correctas
    echo 2. Aseg√∫rate de que Supabase est√© accesible
    echo 3. Ejecuta el script SQL de optimizaci√≥n primero
    echo 4. Revisa los logs de error para m√°s detalles
)

echo.
echo =====================================================
echo Testing de Performance Advisor Warnings completado
echo =====================================================
echo.
pause
