@echo off
echo ========================================
echo üîç TESTING INTEGRACI√ìN SUPABASE Y AUTENTICACI√ìN
echo ========================================
echo.

echo üìã Verificando dependencias...
where node >nul 2>nul
if %errorlevel% neq 0 (
    echo ‚ùå Node.js no est√° instalado
    echo üí° Instala Node.js desde https://nodejs.org/
    pause
    exit /b 1
)

where npm >nul 2>nul
if %errorlevel% neq 0 (
    echo ‚ùå npm no est√° disponible
    pause
    exit /b 1
)

echo ‚úÖ Node.js y npm detectados

echo.
echo üì¶ Instalando dependencias de testing...
npm install puppeteer --save-dev
if %errorlevel% neq 0 (
    echo ‚ùå Error instalando puppeteer
    pause
    exit /b 1
)

echo.
echo üöÄ Verificando servidor...
echo üí° Aseg√∫rate de que el servidor est√© ejecut√°ndose en otra terminal:
echo    cd Backend
echo    npm run dev
echo.
echo ‚è≥ Esperando 5 segundos para verificar servidor...
timeout /t 5 /nobreak >nul

echo.
echo üîç Ejecutando testing de integraci√≥n...
node test-integracion-supabase-autenticacion-completo.js

echo.
echo üìä Testing completado. Revisa el reporte generado:
echo    - REPORTE-TESTING-INTEGRACION-SUPABASE-AUTENTICACION-FINAL.md
echo    - Screenshots generados (test-*.png)
echo.

if exist "REPORTE-TESTING-INTEGRACION-SUPABASE-AUTENTICACION-FINAL.md" (
    echo ‚úÖ Reporte generado exitosamente
    echo.
    echo üìñ ¬øDeseas abrir el reporte? (S/N)
    set /p choice=
    if /i "%choice%"=="S" (
        start "" "REPORTE-TESTING-INTEGRACION-SUPABASE-AUTENTICACION-FINAL.md"
    )
) else (
    echo ‚ö†Ô∏è No se pudo generar el reporte
)

echo.
echo üéØ PR√ìXIMOS PASOS:
echo 1. Revisar el reporte generado
echo 2. Corregir problemas identificados
echo 3. Verificar configuraci√≥n de Supabase
echo 4. Probar funcionalidad de autenticaci√≥n
echo.
pause
