@echo off
chcp 65001 >nul
echo.
echo ========================================
echo   PASO 1: CREAR BACKUP COMPLETO
echo   SUPABASE - LIMPIEZA ESQUEMAS 2025
echo ========================================
echo.
echo üö® ADVERTENCIA CR√çTICA: Este es el PASO 1 OBLIGATORIO
echo antes de proceder con la limpieza de esquemas duplicados.
echo.
echo ‚ö†Ô∏è  IMPORTANTE: Sin este backup NO se puede proceder
echo con los siguientes pasos de forma segura.
echo.
echo üìã ESTE PASO INCLUYE:
echo ‚úì Crear backup completo de todas las tablas
echo ‚úì Generar scripts SQL de backup autom√°tico
echo ‚úì Crear documentaci√≥n completa del backup
echo ‚úì Generar scripts de restauraci√≥n de emergencia
echo ‚úì Verificar integridad del backup creado
echo.

:MENU
echo ========================================
echo           MEN√ö PASO 1 - BACKUP
echo ========================================
echo.
echo 1. Ejecutar PASO 1 - Crear backup completo
echo 2. Ver informaci√≥n del backup a crear
echo 3. Verificar variables de entorno requeridas
echo 4. Ver documentaci√≥n de seguridad
echo 5. Salir (NO recomendado sin backup)
echo.
set /p opcion="Selecciona una opci√≥n (1-5): "

if "%opcion%"=="1" goto EJECUTAR_PASO_1
if "%opcion%"=="2" goto VER_INFO
if "%opcion%"=="3" goto VERIFICAR_ENV
if "%opcion%"=="4" goto VER_DOCUMENTACION
if "%opcion%"=="5" goto SALIR_SIN_BACKUP
echo Opci√≥n inv√°lida. Intenta de nuevo.
goto MENU

:EJECUTAR_PASO_1
echo.
echo ========================================
echo    EJECUTANDO PASO 1 - BACKUP CR√çTICO
echo ========================================
echo.
echo üöÄ Iniciando creaci√≥n de backup completo...
echo.
echo IMPORTANTE: Este proceso es CR√çTICO y OBLIGATORIO
echo antes de cualquier operaci√≥n de limpieza.
echo.
set /p confirmar="¬øContinuar con la creaci√≥n del backup? (S/n): "

if /i "%confirmar%"=="n" goto MENU

echo.
echo ‚è≥ Ejecutando PASO 1: Crear backup completo...
echo.

REM Verificar que Node.js est√© disponible
node --version >nul 2>&1
if %ERRORLEVEL% NEQ 0 (
    echo ‚ùå ERROR: Node.js no est√° instalado o no est√° en el PATH
    echo.
    echo Para instalar Node.js:
    echo 1. Ve a https://nodejs.org/
    echo 2. Descarga e instala la versi√≥n LTS
    echo 3. Reinicia esta ventana de comandos
    echo.
    pause
    goto MENU
)

REM Ejecutar el PASO 1
node PASO-1-CREAR-BACKUP-COMPLETO-SUPABASE.js

if %ERRORLEVEL% EQU 0 (
    echo.
    echo ‚úÖ PASO 1 COMPLETADO EXITOSAMENTE
    echo.
    echo üìÅ Backup creado correctamente
    echo üìÑ Documentaci√≥n generada
    echo üîÑ Scripts de restauraci√≥n listos
    echo.
    echo üéØ PR√ìXIMO PASO: Ejecutar verificaci√≥n de datos √∫nicos
    echo.
    set /p continuar="¬øVer el directorio de backup creado? (S/n): "
    if /i not "%continuar%"=="n" (
        echo.
        echo üìÅ Abriendo directorio de backup...
        for /f "tokens=*" %%i in ('dir /b backup-supabase-* 2^>nul') do (
            start "" "%%i"
            goto backup_found
        )
        echo ‚ö†Ô∏è  Directorio de backup no encontrado autom√°ticamente
        echo Busca el directorio que comience con "backup-supabase-"
        :backup_found
    )
    echo.
    echo üîÑ SIGUIENTE ACCI√ìN RECOMENDADA:
    echo 1. Ejecutar el script SQL de backup en Supabase
    echo 2. Verificar que el backup se cre√≥ correctamente
    echo 3. Proceder con PASO 2: Verificaci√≥n de datos √∫nicos
    echo.
) else (
    echo.
    echo ‚ùå ERROR durante el PASO 1
    echo.
    echo üö® CR√çTICO: Sin backup no se puede proceder
    echo con la limpieza de esquemas duplicados.
    echo.
    echo Revisa los mensajes de error anteriores y
    echo corrige los problemas antes de continuar.
    echo.
)

echo.
pause
goto MENU

:VER_INFO
echo.
echo ========================================
echo      INFORMACI√ìN DEL BACKUP A CREAR
echo ========================================
echo.
echo üìã CONTENIDO DEL BACKUP:
echo.
echo üóÇÔ∏è  TABLAS PRINCIPALES (PascalCase):
echo    ‚úì User - Usuarios del sistema
echo    ‚úì Property - Propiedades publicadas
echo    ‚úì Agent - Agentes inmobiliarios
echo    ‚úì Favorite - Propiedades favoritas
echo    ‚úì Conversation - Conversaciones
echo    ‚úì Message - Mensajes
echo    ‚úì CommunityProfile - Perfiles de comunidad
echo.
echo üóÇÔ∏è  TABLAS DUPLICADAS (snake_case) - Si existen:
echo    ‚úì users - Versi√≥n duplicada de User
echo    ‚úì properties - Versi√≥n duplicada de Property
echo    ‚úì agents - Versi√≥n duplicada de Agent
echo    ‚úì favorites - Versi√≥n duplicada de Favorite
echo    ‚úì conversations - Versi√≥n duplicada de Conversation
echo    ‚úì messages - Versi√≥n duplicada de Message
echo.
echo üîê ELEMENTOS DE SEGURIDAD:
echo    ‚úì Pol√≠ticas RLS (Row Level Security)
echo    ‚úì √çndices de la base de datos
echo    ‚úì Esquemas de backup autom√°tico
echo    ‚úì Scripts de restauraci√≥n de emergencia
echo.
echo üìÑ ARCHIVOS GENERADOS:
echo    ‚úì BACKUP-COMPLETO-SUPABASE.sql
echo    ‚úì RESTAURAR-BACKUP-SUPABASE.sql
echo    ‚úì DOCUMENTACION-BACKUP.md
echo    ‚úì VERIFICACION-BACKUP.sql
echo.
echo üìä ESTIMACI√ìN DE TIEMPO: 2-5 minutos
echo üíæ ESPACIO REQUERIDO: Variable seg√∫n datos
echo.
pause
goto MENU

:VERIFICAR_ENV
echo.
echo ========================================
echo    VERIFICAR VARIABLES DE ENTORNO
echo ========================================
echo.
echo üîç Verificando variables de entorno requeridas...
echo.

REM Verificar Node.js
node --version >nul 2>&1
if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Node.js: INSTALADO
    for /f "tokens=*" %%i in ('node --version') do echo    Versi√≥n: %%i
) else (
    echo ‚ùå Node.js: NO INSTALADO
    echo    Requerido para ejecutar el script de backup
)

echo.
echo üìã VARIABLES DE ENTORNO REQUERIDAS:
echo.
echo üîë NEXT_PUBLIC_SUPABASE_URL
if defined NEXT_PUBLIC_SUPABASE_URL (
    echo    ‚úÖ CONFIGURADA
    echo    üìç URL: %NEXT_PUBLIC_SUPABASE_URL:~0,30%...
) else (
    echo    ‚ùå NO CONFIGURADA
    echo    ‚ö†Ô∏è  CR√çTICO: Esta variable es obligatoria
)

echo.
echo üîë SUPABASE_SERVICE_ROLE_KEY
if defined SUPABASE_SERVICE_ROLE_KEY (
    echo    ‚úÖ CONFIGURADA
    echo    üîê Key: %SUPABASE_SERVICE_ROLE_KEY:~0,20%...
) else (
    echo    ‚ùå NO CONFIGURADA
    echo    ‚ö†Ô∏è  CR√çTICO: Esta variable es obligatoria
)

echo.
if defined NEXT_PUBLIC_SUPABASE_URL if defined SUPABASE_SERVICE_ROLE_KEY (
    echo ‚úÖ TODAS LAS VARIABLES CONFIGURADAS CORRECTAMENTE
    echo üöÄ Listo para ejecutar el backup
) else (
    echo ‚ùå FALTAN VARIABLES CR√çTICAS
    echo.
    echo üìã PARA CONFIGURAR LAS VARIABLES:
    echo 1. Crea un archivo .env.local en el directorio Backend
    echo 2. Agrega las siguientes l√≠neas:
    echo    NEXT_PUBLIC_SUPABASE_URL=tu_url_de_supabase
    echo    SUPABASE_SERVICE_ROLE_KEY=tu_service_role_key
    echo 3. Reinicia esta ventana de comandos
    echo.
    echo üîó Obt√©n estas variables desde tu dashboard de Supabase
)

echo.
pause
goto MENU

:VER_DOCUMENTACION
echo.
echo ========================================
echo       DOCUMENTACI√ìN DE SEGURIDAD
echo ========================================
echo.
echo üõ°Ô∏è  MEDIDAS DE SEGURIDAD IMPLEMENTADAS:
echo.
echo üîí BACKUP AUTOM√ÅTICO:
echo    ‚úì Crea esquema de backup con timestamp
echo    ‚úì Copia todas las tablas principales
echo    ‚úì Preserva estructura y datos
echo    ‚úì Incluye pol√≠ticas RLS e √≠ndices
echo.
echo üîÑ RESTAURACI√ìN DE EMERGENCIA:
echo    ‚úì Script autom√°tico de restauraci√≥n
echo    ‚úì Verificaciones de integridad
echo    ‚úì Rollback completo en caso de error
echo    ‚úì Documentaci√≥n paso a paso
echo.
echo ‚ö†Ô∏è  ADVERTENCIAS CR√çTICAS:
echo    ‚Ä¢ NO eliminar el directorio de backup
echo    ‚Ä¢ Mantener copia adicional en ubicaci√≥n segura
echo    ‚Ä¢ Probar restauraci√≥n antes de limpieza
echo    ‚Ä¢ Ejecutar en horario de bajo tr√°fico
echo.
echo üö® EN CASO DE EMERGENCIA:
echo    1. DETENER inmediatamente la limpieza
echo    2. EJECUTAR script de restauraci√≥n
echo    3. VERIFICAR integridad de datos
echo    4. CONTACTAR equipo t√©cnico si hay problemas
echo.
echo üìã PROCESO RECOMENDADO:
echo    1. Crear backup (PASO 1) ‚Üê EST√ÅS AQU√ç
echo    2. Verificar datos √∫nicos (PASO 2)
echo    3. Ejecutar limpieza (PASO 3)
echo    4. Verificar funcionamiento (PASO 4)
echo    5. Limpiar backups antiguos (PASO 5)
echo.
pause
goto MENU

:SALIR_SIN_BACKUP
echo.
echo ========================================
echo         ADVERTENCIA CR√çTICA
echo ========================================
echo.
echo üö® ATENCI√ìN: Est√°s saliendo sin crear el backup
echo.
echo ‚ö†Ô∏è  RIESGOS DE NO CREAR BACKUP:
echo    ‚Ä¢ P√©rdida total de datos en caso de error
echo    ‚Ä¢ Imposibilidad de recuperar informaci√≥n
echo    ‚Ä¢ Downtime prolongado del sistema
echo    ‚Ä¢ P√©rdida de configuraciones cr√≠ticas
echo.
echo üõ°Ô∏è  EL BACKUP ES OBLIGATORIO PORQUE:
echo    ‚Ä¢ Protege contra errores durante la limpieza
echo    ‚Ä¢ Permite restauraci√≥n r√°pida
echo    ‚Ä¢ Garantiza continuidad del servicio
echo    ‚Ä¢ Cumple con mejores pr√°cticas de seguridad
echo.
set /p confirmar_salida="¬øEst√°s SEGURO de salir sin backup? (s/N): "

if /i "%confirmar_salida%"=="s" (
    echo.
    echo ‚ùå SALIENDO SIN BACKUP - ALTO RIESGO
    echo.
    echo üìã RECOMENDACI√ìN URGENTE:
    echo Ejecuta este script nuevamente y crea el backup
    echo ANTES de proceder con cualquier limpieza.
    echo.
    echo üîÑ Para volver a ejecutar:
    echo Ejecuta: EJECUTAR-PASO-1-CREAR-BACKUP-COMPLETO-SUPABASE.bat
    echo.
    pause
    exit /b 1
) else (
    echo.
    echo ‚úÖ Decisi√≥n correcta. Regresando al men√∫...
    echo.
    goto MENU
)

:ERROR
echo.
echo ‚ùå Error durante la ejecuci√≥n del PASO 1.
echo.
echo üîç POSIBLES CAUSAS:
echo ‚Ä¢ Variables de entorno no configuradas
echo ‚Ä¢ Node.js no instalado
echo ‚Ä¢ Problemas de conexi√≥n con Supabase
echo ‚Ä¢ Permisos insuficientes
echo.
echo üìã SOLUCIONES:
echo 1. Verificar variables de entorno (opci√≥n 3)
echo 2. Instalar Node.js si es necesario
echo 3. Verificar conexi√≥n a internet
echo 4. Ejecutar como administrador si es necesario
echo.
pause
exit /b 1
