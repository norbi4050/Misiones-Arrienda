@echo off
echo =====================================================
echo EJECUTAR TESTING - NUEVOS WARNINGS SUPABASE
echo Performance Advisor - Database Linter
echo =====================================================
echo Fecha: %date% %time%
echo Objetivo: Validar correcci√≥n de 5 nuevos warnings
echo - 4x Multiple Permissive Policies (community_profiles)
echo - 1x Duplicate Index (users)
echo =====================================================

:: Configurar variables de entorno
set NODE_ENV=development
set FORCE_COLOR=1

:: Verificar que Node.js est√° instalado
node --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Error: Node.js no est√° instalado
    echo Por favor instala Node.js desde https://nodejs.org/
    pause
    exit /b 1
)

echo ‚úÖ Node.js detectado correctamente

:: Verificar que npm est√° disponible
npm --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Error: npm no est√° disponible
    pause
    exit /b 1
)

echo ‚úÖ npm detectado correctamente

:: Instalar dependencias necesarias si no existen
echo.
echo üì¶ Verificando dependencias necesarias...

if not exist "node_modules\@supabase\supabase-js" (
    echo üì• Instalando @supabase/supabase-js...
    npm install @supabase/supabase-js
    if errorlevel 1 (
        echo ‚ùå Error al instalar @supabase/supabase-js
        pause
        exit /b 1
    )
)

if not exist "node_modules\dotenv" (
    echo üì• Instalando dotenv...
    npm install dotenv
    if errorlevel 1 (
        echo ‚ùå Error al instalar dotenv
        pause
        exit /b 1
    )
)

echo ‚úÖ Dependencias verificadas

:: Verificar variables de entorno
echo.
echo üîç Verificando variables de entorno...

if not exist ".env" (
    if not exist ".env.local" (
        echo ‚ö†Ô∏è Advertencia: No se encontr√≥ archivo .env o .env.local
        echo Creando archivo .env de ejemplo...
        echo # Variables de entorno para Supabase > .env
        echo NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co >> .env
        echo SUPABASE_SERVICE_ROLE_KEY=your-service-role-key >> .env
        echo.
        echo ‚ö†Ô∏è IMPORTANTE: Configura las variables reales en .env antes de continuar
        echo 1. NEXT_PUBLIC_SUPABASE_URL: URL de tu proyecto Supabase
        echo 2. SUPABASE_SERVICE_ROLE_KEY: Service Role Key de Supabase
        echo.
        echo ¬øDeseas continuar con valores de ejemplo? (s/n)
        set /p continue="Respuesta: "
        if /i not "%continue%"=="s" (
            echo Configuraci√≥n cancelada
            pause
            exit /b 1
        )
    )
)

echo ‚úÖ Variables de entorno verificadas

:: Ejecutar el script de testing
echo.
echo üöÄ Iniciando testing exhaustivo de nuevos warnings...
echo =====================================================

node TESTING-NUEVOS-WARNINGS-SUPABASE-PERFORMANCE-ADVISOR-FINAL.js

:: Verificar el resultado del testing
if errorlevel 1 (
    echo.
    echo ‚ùå El testing fall√≥ con errores
    echo Revisa los logs anteriores para m√°s detalles
    echo.
    echo üîß POSIBLES SOLUCIONES:
    echo 1. Verificar que las variables de entorno est√°n configuradas correctamente
    echo 2. Verificar que el script SQL se ejecut√≥ en Supabase Dashboard
    echo 3. Verificar conectividad con Supabase
    echo 4. Revisar permisos del Service Role Key
    echo.
) else (
    echo.
    echo ‚úÖ Testing completado exitosamente
    echo.
    echo üìä RESULTADOS:
    echo - Revisa el archivo REPORTE-TESTING-NUEVOS-WARNINGS-SUPABASE-FINAL.json
    echo - Verifica que los warnings desaparecieron en Performance Advisor
    echo.
    echo üîç PR√ìXIMOS PASOS:
    echo 1. Ejecutar el script SQL en Supabase Dashboard si no se hizo
    echo 2. Verificar Performance Advisor en Supabase
    echo 3. Monitorear rendimiento de consultas
    echo 4. Usar funciones de utilidad para monitoreo continuo
)

echo.
echo =====================================================
echo Testing de nuevos warnings completado
echo Fecha: %date% %time%
echo =====================================================

:: Mostrar archivos generados
echo.
echo üìÅ ARCHIVOS GENERADOS:
if exist "REPORTE-TESTING-NUEVOS-WARNINGS-SUPABASE-FINAL.json" (
    echo ‚úÖ REPORTE-TESTING-NUEVOS-WARNINGS-SUPABASE-FINAL.json
) else (
    echo ‚ùå REPORTE-TESTING-NUEVOS-WARNINGS-SUPABASE-FINAL.json (no generado)
)

echo.
echo üí° CONSEJOS:
echo - Ejecuta este testing despu√©s de aplicar el script SQL
echo - Monitorea el Performance Advisor regularmente
echo - Usa las funciones de utilidad para detectar futuros problemas
echo - Mant√©n documentadas las optimizaciones aplicadas

echo.
pause
