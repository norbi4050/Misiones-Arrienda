@echo off
echo ========================================
echo 57. TESTING ERROR REGISTRO CORREGIDO
echo ========================================
echo.
echo Este script probara el endpoint de registro mejorado
echo para verificar que el error "Database error saving new user" 
echo ha sido solucionado correctamente.
echo.
pause

echo.
echo ========================================
echo PASO 1: VERIFICAR SERVIDOR ACTIVO
echo ========================================
echo.
echo Verificando si el servidor esta ejecutandose...
curl -s http://localhost:3000 > nul
if %errorlevel% neq 0 (
    echo ‚ùå Servidor no esta activo
    echo.
    echo Iniciando servidor...
    cd Backend
    start "Servidor Next.js" cmd /k "npm run dev"
    echo.
    echo ‚è≥ Esperando 10 segundos para que el servidor inicie...
    timeout /t 10 /nobreak > nul
    cd ..
) else (
    echo ‚úÖ Servidor esta activo
)

echo.
echo ========================================
echo PASO 2: TESTING ENDPOINT REGISTRO
echo ========================================
echo.

echo üß™ TEST 1: Registro de usuario inquilino
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Juan Perez\",\"email\":\"juan.test@example.com\",\"phone\":\"+54 376 123-4567\",\"password\":\"123456\",\"userType\":\"inquilino\"}"
echo.
echo.

echo üß™ TEST 2: Registro de usuario due√±o directo
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Maria Rodriguez\",\"email\":\"maria.test@example.com\",\"phone\":\"+54 376 987-6543\",\"password\":\"123456\",\"userType\":\"dueno_directo\",\"propertyCount\":3}"
echo.
echo.

echo üß™ TEST 3: Registro de inmobiliaria
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Carlos Mendoza\",\"email\":\"carlos.test@example.com\",\"phone\":\"+54 376 555-1234\",\"password\":\"123456\",\"userType\":\"inmobiliaria\",\"companyName\":\"Inmobiliaria Posadas\",\"licenseNumber\":\"INM-2024-001\"}"
echo.
echo.

echo üß™ TEST 4: Validaci√≥n de campos faltantes
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Test User\",\"email\":\"test@example.com\"}"
echo.
echo.

echo üß™ TEST 5: Validaci√≥n de email inv√°lido
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Test User\",\"email\":\"email-invalido\",\"phone\":\"+54 376 123-4567\",\"password\":\"123456\",\"userType\":\"inquilino\"}"
echo.
echo.

echo üß™ TEST 6: Validaci√≥n de contrase√±a corta
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Test User\",\"email\":\"test2@example.com\",\"phone\":\"+54 376 123-4567\",\"password\":\"123\",\"userType\":\"inquilino\"}"
echo.
echo.

echo üß™ TEST 7: Usuario duplicado
echo.
curl -X POST http://localhost:3000/api/auth/register ^
  -H "Content-Type: application/json" ^
  -d "{\"name\":\"Juan Perez\",\"email\":\"juan.test@example.com\",\"phone\":\"+54 376 123-4567\",\"password\":\"123456\",\"userType\":\"inquilino\"}"
echo.
echo.

echo ========================================
echo PASO 3: VERIFICAR LOGS DEL SERVIDOR
echo ========================================
echo.
echo Revisa la consola del servidor para ver los logs detallados.
echo Los logs ahora incluyen:
echo - ‚úÖ Verificaci√≥n de variables de entorno
echo - ‚úÖ Validaciones mejoradas con c√≥digos de error
echo - ‚úÖ Verificaci√≥n de conectividad con Supabase
echo - ‚úÖ Manejo de rollback en caso de errores
echo - ‚úÖ Logging estructurado con timestamps
echo.

echo ========================================
echo PASO 4: AN√ÅLISIS DE RESULTADOS
echo ========================================
echo.
echo RESULTADOS ESPERADOS:
echo.
echo TEST 1-3: Registro exitoso (201)
echo - Respuesta con usuario creado
echo - Campos completos y correctos
echo - Tiempo de procesamiento incluido
echo.
echo TEST 4: Error 400 - Campos faltantes
echo - C√≥digo: MISSING_REQUIRED_FIELDS
echo - Lista espec√≠fica de campos faltantes
echo.
echo TEST 5: Error 400 - Email inv√°lido
echo - C√≥digo: INVALID_EMAIL_FORMAT
echo - Mensaje descriptivo del error
echo.
echo TEST 6: Error 400 - Contrase√±a corta
echo - C√≥digo: PASSWORD_TOO_SHORT
echo - Requisitos de contrase√±a especificados
echo.
echo TEST 7: Error 409 - Usuario duplicado
echo - C√≥digo: USER_ALREADY_EXISTS
echo - Mensaje claro sobre duplicaci√≥n
echo.

echo ========================================
echo PASO 5: VERIFICAR MEJORAS IMPLEMENTADAS
echo ========================================
echo.
echo ‚úÖ MEJORAS IMPLEMENTADAS:
echo.
echo 1. VERIFICACI√ìN DE VARIABLES DE ENTORNO
echo    - Validaci√≥n expl√≠cita de SUPABASE_URL
echo    - Validaci√≥n expl√≠cita de SERVICE_ROLE_KEY
echo    - Errores espec√≠ficos si faltan variables
echo.
echo 2. LOGGING MEJORADO
echo    - Prefijo [REGISTRO] en todos los logs
echo    - Timestamps en respuestas de error
echo    - C√≥digos de error espec√≠ficos
echo    - Tiempo de procesamiento incluido
echo.
echo 3. VALIDACIONES ROBUSTAS
echo    - Parseo seguro de JSON
echo    - Validaci√≥n de campos requeridos
echo    - Validaci√≥n espec√≠fica por tipo de usuario
echo    - Regex mejorado para email
echo.
echo 4. VERIFICACI√ìN DE CONECTIVIDAD
echo    - Health check de base de datos
echo    - Detecci√≥n de tabla users faltante
echo    - Manejo de errores de conexi√≥n
echo.
echo 5. MANEJO DE ERRORES ESPEC√çFICOS
echo    - Rollback autom√°tico en caso de fallo
echo    - C√≥digos de error √∫nicos
echo    - Mensajes descriptivos
echo    - Logging detallado de excepciones
echo.

echo ========================================
echo PASO 6: PR√ìXIMOS PASOS
echo ========================================
echo.
echo Si los tests son exitosos:
echo 1. ‚úÖ El error "Database error saving new user" est√° solucionado
echo 2. ‚úÖ El sistema de registro es m√°s robusto
echo 3. ‚úÖ Los errores son m√°s informativos
echo 4. ‚úÖ El debugging es m√°s f√°cil
echo.
echo Si hay errores:
echo 1. Revisar logs del servidor para detalles espec√≠ficos
echo 2. Verificar variables de entorno en .env.local
echo 3. Confirmar que Supabase est√° configurado correctamente
echo 4. Verificar que la tabla users existe
echo.

echo ========================================
echo TESTING COMPLETADO
echo ========================================
echo.
echo El endpoint de registro ha sido mejorado significativamente:
echo - Mejor manejo de errores
echo - Logging m√°s detallado
echo - Validaciones m√°s robustas
echo - C√≥digos de error espec√≠ficos
echo - Rollback autom√°tico
echo.
echo Revisa los resultados de los tests arriba para confirmar
echo que el error "Database error saving new user" ha sido solucionado.
echo.
pause
